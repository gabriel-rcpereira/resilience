spring:
  application.name: grcp-resilience4j-demo
  jackson.serialization.indent_output: true

server:
  port: 8080

api:
  external:
    nasa:
      source: https://api.nasa.gov
      name: marsRoverApi
      key: F4tJVKleVGv1YGnox8ea937CgVRfD2wnkg4sGvz3
    dojo:
      source: http://localhost:1080
      name: dojo-test

feign:
  client:
    config:
      default:
        loggerLevel: basic
  hystrix:
    enabled: false

management:
  endpoints:
    web:
      exposure:
        include: "*"

management.health.circuitbreakers.enabled: true

resilience4j:
  circuitbreaker:
    circuitBreakerAspectOrder: 2
  retry:
    retryAspectOrder: 1

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowType: TIME_BASED
      slidingWindowSize: 60
      minimumNumberOfCalls: 7
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 60s
  instances:
    nasapi:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 4
      waitDuration: 1s
      enableExponentialBackoff: false
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - feign.FeignException
  instances:
    nasapi:
      baseConfig: default

  #      recordExceptions:
  #        - org.springframework.web.client.HttpServerErrorException
  #        - java.util.concurrent.TimeoutException
  #        - java.io.IOException
  #      ignoreExceptions:
  #        - io.github.robwin.exception.BusinessException
  #    shared:
  #      slidingWindowSize: 100
  #      permittedNumberOfCallsInHalfOpenState: 30
  #      waitDurationInOpenState: 1s
  #      failureRateThreshold: 50
  #      eventConsumerBufferSize: 10
  #      ignoreExceptions:
  #        - io.github.robwin.exception.BusinessException

  #    default:
  #      registerHealthIndicator: true
  #      slidingWindowType: TIME_BASED # how resilience aggregate the number of calls
  #      slidingWindowSize: 10 # time to aggregate number of requests
  #      permittedNumberOfCallsInHalfOpenState: 3 # number of calls allowed before change to closed again
  #      minimumNumberOfCalls: 3 # Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker can calculate the error rate or slow call rate.
  #      waitDurationInOpenState: 50s # The time that the CircuitBreaker should wait before transitioning from open to half-open.
  #      failureRateThreshold: 50 #Configures the failure rate threshold in percentage.
  #      eventConsumerBufferSize: 10
  #      automaticTransitionFromOpenToHalfOpenEnabled: false #The advantage here is no thread monitors the state of all CircuitBreakers.
  #      recordExceptions
  #      ignoreExceptions
  #      failureRateThreshold: 50
  #      eventConsumerBufferSize: 10